--ESQUEMA TLM

CREATE USER TLM IDENTIFIED BY TLM;
ALTER USER TLM QUOTA UNLIMITED ON USERS;
GRANT DBA, CREATE SESSION TO TLM;
CONNECT TLM/TLM;

-- TABLA CLIENTES
CREATE TABLE CLIENTES(
        CEDULA VARCHAR2(9) NOT NULL CONSTRAINT CLIENTES_PK PRIMARY KEY,
        NOMBRE VARCHAR2(30),
        PRIMER_APELLIDO VARCHAR2(20),
        SEGUNDO_APELLIDO VARCHAR2(20),
        TIPO VARCHAR2(20),
        TELEFONO VARCHAR2(11),
        DIRECCION VARCHAR2(100),
        CORREO VARCHAR2(30)
)

-- TABLA PROVEEDORES
CREATE TABLE PROVEEDORES(
        CEDULA VARCHAR2(9) NOT NULL CONSTRAINT PROVEEDORES_PK PRIMARY KEY,
        NOMBRE VARCHAR2(30),
        TIPO VARCHAR2(20),
        TELEFONO VARCHAR2(11),
        DIRECCION VARCHAR2(100),
        CORREO VARCHAR2(30),
        PRODUCTOS NUMBER
)

-- TABLA VENTAS
CREATE TABLE VENTAS(
        ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT VENTAS_PK PRIMARY KEY,
        MONTO NUMBER,
        PRODUCTOS VARCHAR2(50),
        PAGO VARCHAR2(25),
        COMPRADOR VARCHAR2(20) CONSTRAINT COMPRADOR_FK REFERENCES CLIENTES(CEDULA),
        VENDEDOR VARCHAR2(20) CONSTRAINT VENDEDOR_FK REFERENCES PROVEEDORES(CEDULA),
        FECHA DATE,
        CANTIDADES NUMBER
)

-- TABLA EMPLEADOS
CREATE TABLE EMPLEADOS (
    CEDULA INT PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(50),
    TIPO VARCHAR2(20),
    TELEFONO VARCHAR2(15),
    DIRECCION CLOB,
    CORREO VARCHAR2(50),
    PUESTO VARCHAR2(50),
    SALARIO INT,
    USERNAME VARCHAR2(30),
    PASSWORD VARCHAR2(30)
);

-- TABLA PRODUCTOS
CREATE TABLE PRODUCTOS (
    CODIGO INT PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(50),
    DESCRIPCION CLOB,
    CANTIDAD INT,
    PRECIO INT
);



INSERT INTO PROVEEDORES (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS)
VALUES ('117880731', 'Proveedor1', 'General', '1234567890', 'Heredia Centro', 'provedor1@ejemplo.com', 10);

INSERT INTO CLIENTES (CEDULA, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO)
VALUES ('117880731', 'Juan', 'Pérez', 'López', 'Regular', '1234567890', 'San José', 'jperez@ejemplo.com');

INSERT INTO VENTAS (MONTO, PRODUCTOS, PAGO, COMPRADOR, VENDEDOR, FECHA, CANTIDADES)
VALUES (45, 'TEST', 'TARJETA', '117880731', '117880731', SYSDATE, 3);

INSERT INTO EMPLEADOS (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD)
VALUES (123456789, 'María González', 'Tiempo completo', '9876543210', 'Avenida Central, San José', 'mgonzalez@empresa.com', 'Gerente', 1500000, 'maria.gonzalez', 'password123');

INSERT INTO PRODUCTOS (CODIGO, NOMBRE, DESCRIPCION, CANTIDAD, PRECIO)
VALUES (101, 'Jeans', 'Color gris', 25, 7500);

----------- PROCEDIMIENTOS -----------



------------------------- INSERTAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE INSERTAR_CLIENTE(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    PRIMER_APELLIDO_IN IN VARCHAR2,
    SEGUNDO_APELLIDO_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2
) AS
BEGIN
    INSERT INTO CLIENTES (CEDULA, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO)
    VALUES (CEDULA_IN, NOMBRE_IN, PRIMER_APELLIDO_IN, SEGUNDO_APELLIDO_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN);
    DBMS_OUTPUT.PUT_LINE('Cliente insertado correctamente: ' || CEDULA_IN);
END;


------------------------- LEER CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE LEER_CLIENTE(
    CEDULA_IN IN VARCHAR2
) AS
    NOMBRE_OUT CLIENTES.NOMBRE%TYPE;
    PRIMER_APELLIDO_OUT CLIENTES.PRIMER_APELLIDO%TYPE;
    SEGUNDO_APELLIDO_OUT CLIENTES.SEGUNDO_APELLIDO%TYPE;
    TIPO_OUT CLIENTES.TIPO%TYPE;
    TELEFONO_OUT CLIENTES.TELEFONO%TYPE;
    DIRECCION_OUT CLIENTES.DIRECCION%TYPE;
    CORREO_OUT CLIENTES.CORREO%TYPE;
BEGIN
    SELECT NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO
    INTO NOMBRE_OUT, PRIMER_APELLIDO_OUT, SEGUNDO_APELLIDO_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT
    FROM CLIENTES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Cliente encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT || ' ' || PRIMER_APELLIDO_OUT || ' ' || SEGUNDO_APELLIDO_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;

------------------------- ACTUALIZAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE ACTUALIZAR_CLIENTE(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    PRIMER_APELLIDO_IN IN VARCHAR2,
    SEGUNDO_APELLIDO_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2
) AS
BEGIN
    UPDATE CLIENTES
    SET NOMBRE = NOMBRE_IN,
        PRIMER_APELLIDO = PRIMER_APELLIDO_IN,
        SEGUNDO_APELLIDO = SEGUNDO_APELLIDO_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN
    WHERE CEDULA = CEDULA_IN;
    DBMS_OUTPUT.PUT_LINE('Cliente actualizado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;


------------------------------------- ELIMINAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_CLIENTE(
    CEDULA_IN IN VARCHAR2
) AS
BEGIN
    DELETE FROM CLIENTES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Cliente eliminado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;


EXEC INSERTAR_CLIENTE('123456789', 'Juan', 'Perez', 'Lopez', 'Regular', '1234567890', 'Calle Ficticia 123', 'juan.perez@mail.com');

EXEC LEER_CLIENTE('123456789');

EXEC ACTUALIZAR_CLIENTE('123456789', 'Juan', 'Perez', 'Lopez', 'VIP', '0987654321', 'Calle Ficticia 456', 'juan.perez@newmail.com');

EXEC ELIMINAR_CLIENTE('123456789');




------------------------ PROVEEDORES -------------------------------------------


------------------------------------- INSERTAR PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE INSERTAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2,
    PRODUCTOS_IN IN NUMBER
) AS
BEGIN
    INSERT INTO PROVEEDORES (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS)
    VALUES (CEDULA_IN, NOMBRE_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN, PRODUCTOS_IN);

    DBMS_OUTPUT.PUT_LINE('Proveedor insertado correctamente: ' || CEDULA_IN);
END;

------------------------------------- LEER PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE LEER_PROVEEDOR(
    CEDULA_IN IN VARCHAR2
) AS
    NOMBRE_OUT PROVEEDORES.NOMBRE%TYPE;
    TIPO_OUT PROVEEDORES.TIPO%TYPE;
    TELEFONO_OUT PROVEEDORES.TELEFONO%TYPE;
    DIRECCION_OUT PROVEEDORES.DIRECCION%TYPE;
    CORREO_OUT PROVEEDORES.CORREO%TYPE;
    PRODUCTOS_OUT PROVEEDORES.PRODUCTOS%TYPE;
BEGIN
    SELECT NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS
    INTO NOMBRE_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT, PRODUCTOS_OUT
    FROM PROVEEDORES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Proveedor encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
    DBMS_OUTPUT.PUT_LINE('Productos: ' || PRODUCTOS_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;

------------------------------------- ACTUALIZAR PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2,
    PRODUCTOS_IN IN NUMBER
) AS
BEGIN
    UPDATE PROVEEDORES
    SET NOMBRE = NOMBRE_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN,
        PRODUCTOS = PRODUCTOS_IN
    WHERE CEDULA = CEDULA_IN;

    DBMS_OUTPUT.PUT_LINE('Proveedor actualizado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;

------------------------ ELIMINAR PROVEEDOR ------------------------
CREATE OR REPLACE PROCEDURE ELIMINAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2
) AS
BEGIN
    DELETE FROM PROVEEDORES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Proveedor eliminado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;


EXEC INSERTAR_PROVEEDOR('98745623', 'ProveedorA', 'Mayorista', '9876543210', 'Avenida 9', 'proveedora@mail.com', 50);

EXEC LEER_PROVEEDOR('98745623');

EXEC ACTUALIZAR_PROVEEDOR('98745623', 'ProveedorA', 'Distribuidor', '9888888888', 'Calle Real 456', 'proveedorupdate@mail.com', 60);

EXEC ELIMINAR_PROVEEDOR('98745623');
------------------------------------------------------------------------
------------------------------------------------------------------------

------------------------ CREAR EMPLEADO ------------------------

CREATE OR REPLACE PROCEDURE INSERTAR_EMPLEADO(
    CEDULA_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN CLOB,
    CORREO_IN IN VARCHAR2,
    PUESTO_IN IN VARCHAR2,
    SALARIO_IN IN INT,
    USERNAME_IN IN VARCHAR2,
    PASSWORD_IN IN VARCHAR2
) AS
BEGIN
    INSERT INTO EMPLEADOS (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD)
    VALUES (CEDULA_IN, NOMBRE_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN, PUESTO_IN, SALARIO_IN, USERNAME_IN, PASSWORD_IN);
    
    DBMS_OUTPUT.PUT_LINE('Empleado insertado correctamente.');
END;

------------------------ LEER EMPLEADO ------------------------
CREATE OR REPLACE PROCEDURE LEER_EMPLEADO(
    CEDULA_IN IN INT
) AS
    NOMBRE_OUT EMPLEADOS.NOMBRE%TYPE;
    TIPO_OUT EMPLEADOS.TIPO%TYPE;
    TELEFONO_OUT EMPLEADOS.TELEFONO%TYPE;
    DIRECCION_OUT EMPLEADOS.DIRECCION%TYPE;
    CORREO_OUT EMPLEADOS.CORREO%TYPE;
    PUESTO_OUT EMPLEADOS.PUESTO%TYPE;
    SALARIO_OUT EMPLEADOS.SALARIO%TYPE;
    USERNAME_OUT EMPLEADOS.USERNAME%TYPE;
    PASSWORD_OUT EMPLEADOS.PASSWORD%TYPE;
BEGIN
    SELECT NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD
    INTO NOMBRE_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT, PUESTO_OUT, SALARIO_OUT, USERNAME_OUT, PASSWORD_OUT
    FROM EMPLEADOS
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
    DBMS_OUTPUT.PUT_LINE('Puesto: ' || PUESTO_OUT);
    DBMS_OUTPUT.PUT_LINE('Salario: ' || SALARIO_OUT);
    DBMS_OUTPUT.PUT_LINE('Username: ' || USERNAME_OUT);
    DBMS_OUTPUT.PUT_LINE('Password: ' || PASSWORD_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;


------------------------ ACTUALIZAR EMPLEADO ------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_EMPLEADO(
    CEDULA_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN CLOB,
    CORREO_IN IN VARCHAR2,
    PUESTO_IN IN VARCHAR2,
    SALARIO_IN IN INT,
    USERNAME_IN IN VARCHAR2,
    PASSWORD_IN IN VARCHAR2
) AS
BEGIN
    UPDATE EMPLEADOS
    SET NOMBRE = NOMBRE_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN,
        PUESTO = PUESTO_IN,
        SALARIO = SALARIO_IN,
        USERNAME = USERNAME_IN,
        PASSWORD = PASSWORD_IN
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado actualizado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;



------------------------ ELIMINAR EMPLEADO ------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_EMPLEADO(
    CEDULA_IN IN INT
) AS
BEGIN
    DELETE FROM EMPLEADOS
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado eliminado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;




EXEC INSERTAR_EMPLEADO(12365428, 'Samara Martinez', 'Administrativo', '555-1234', 'Calle Ficticia 123', 's.martinez@email.com', 'Gerente', 3500, 'juanp', 'password123');

EXEC LEER_EMPLEADO(12365428);

EXEC ACTUALIZAR_EMPLEADO(12365428, 'Samara Martinez', 'Manager', '555-4321', 'Calle Real 456', 's.martinez@newmail.com', 'Director', 4000, 'juanp', 'newpassword123');

EXEC ELIMINAR_EMPLEADO(12365428);


------------------------ INSERTAR PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE INSERTAR_PRODUCTO(
    CODIGO_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    DESCRIPCION_IN IN CLOB,
    CANTIDAD_IN IN INT,
    PRECIO_IN IN INT
) AS
BEGIN
    INSERT INTO PRODUCTOS (CODIGO, NOMBRE, DESCRIPCION, CANTIDAD, PRECIO)
    VALUES (CODIGO_IN, NOMBRE_IN, DESCRIPCION_IN, CANTIDAD_IN, PRECIO_IN);
    
    DBMS_OUTPUT.PUT_LINE('Producto insertado correctamente.');
END;


------------------------ LEER PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE LEER_PRODUCTO(
    CODIGO_IN IN INT
) AS
    NOMBRE_OUT PRODUCTOS.NOMBRE%TYPE;
    DESCRIPCION_OUT PRODUCTOS.DESCRIPCION%TYPE;
    CANTIDAD_OUT PRODUCTOS.CANTIDAD%TYPE;
    PRECIO_OUT PRODUCTOS.PRECIO%TYPE;
BEGIN
    SELECT NOMBRE, DESCRIPCION, CANTIDAD, PRECIO
    INTO NOMBRE_OUT, DESCRIPCION_OUT, CANTIDAD_OUT, PRECIO_OUT
    FROM PRODUCTOS
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Descripción: ' || DESCRIPCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Cantidad: ' || CANTIDAD_OUT);
    DBMS_OUTPUT.PUT_LINE('Precio: ' || PRECIO_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;



------------------------ ACTUALIZAR PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PRODUCTO(
    CODIGO_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    DESCRIPCION_IN IN CLOB,
    CANTIDAD_IN IN INT,
    PRECIO_IN IN INT
) AS
BEGIN
    UPDATE PRODUCTOS
    SET NOMBRE = NOMBRE_IN,
        DESCRIPCION = DESCRIPCION_IN,
        CANTIDAD = CANTIDAD_IN,
        PRECIO = PRECIO_IN
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto actualizado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;


------------------------ ELIMINAR PRODUCTO ------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_PRODUCTO(
    CODIGO_IN IN INT
) AS
BEGIN
    DELETE FROM PRODUCTOS
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto eliminado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;


EXEC INSERTAR_PRODUCTO(102, 'Jeans', 'Azul', 50, 1500);

EXEC LEER_PRODUCTO(102);

EXEC ACTUALIZAR_PRODUCTO(102, 'Jeans', 'Negro', 45, 1600);

EXEC ELIMINAR_PRODUCTO(102);





-- TABLA CLIENTES
CREATE TABLE CLIENTES(
        CEDULA VARCHAR2(9) NOT NULL CONSTRAINT CLIENTES_PK PRIMARY KEY,
        NOMBRE VARCHAR2(10),
        PRIMER_APELLIDO VARCHAR2(20),
        SEGUNDO_APELLIDO VARCHAR2(20),
        TIPO VARCHAR2(10),
        TELEFONO VARCHAR2(11),
        DIRECCION VARCHAR2(100),
        CORREO VARCHAR2(30)
)


DROP TABLE PROVEEDORES;
-- TABLA PROVEEDORES
CREATE TABLE PROVEEDORES(
        CEDULA VARCHAR2(9) NOT NULL CONSTRAINT PROVEEDORES_PK PRIMARY KEY,
        NOMBRE VARCHAR2(30),
        TIPO VARCHAR2(20),
        TELEFONO VARCHAR2(11),
        DIRECCION VARCHAR2(100),
        CORREO VARCHAR2(30),
        PRODUCTOS NUMBER
)

-- TABLA VENTAS
CREATE TABLE VENTAS(
    ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT VENTAS_PK PRIMARY KEY,
    MONTO NUMBER(10,2),                         
    PRODUCTOS VARCHAR2(100),                      
    PAGO VARCHAR2(25),
    COMPRADOR VARCHAR2(9) CONSTRAINT COMPRADOR_FK REFERENCES CLIENTES(CEDULA),
    VENDEDOR VARCHAR2(9) CONSTRAINT VENDEDOR_FK REFERENCES PROVEEDORES(CEDULA),
    FECHA DATE,
    CANTIDADES NUMBER(5)                 
);

-- TABLA EMPLEADOS
CREATE TABLE EMPLEADOS (
    CEDULA INT PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(50),
    TIPO VARCHAR2(20),
    TELEFONO VARCHAR2(15),
    DIRECCION CLOB,
    CORREO VARCHAR2(50),
    PUESTO VARCHAR2(50),
    SALARIO INT,
    USERNAME VARCHAR2(30),
    PASSWORD VARCHAR2(30)
);

-- TABLA PRODUCTOS
CREATE TABLE PRODUCTOS (
    CODIGO INT PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(50),
    DESCRIPCION CLOB,
    CANTIDAD INT,
    PRECIO INT
);

SET SERVEROUTPUT ON;


INSERT INTO PROVEEDORES (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS)
VALUES ('117880731', 'Proveedor1', 'General', '1234567890', 'Heredia Centro', 'provedor1@ejemplo.com', 10);

INSERT INTO CLIENTES (CEDULA, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO)
VALUES ('117880731', 'Juan', 'Pérez', 'López', 'Regular', '1234567890', 'San José', 'jperez@ejemplo.com');

INSERT INTO VENTAS (MONTO, PRODUCTOS, PAGO, COMPRADOR, VENDEDOR, FECHA, CANTIDADES)
VALUES (45, 'TEST', 'TARJETA', '117880731', '117880731', SYSDATE, 3);

INSERT INTO EMPLEADOS (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD)
VALUES (123456789, 'María González', 'Tiempo completo', '9876543210', 'Avenida Central, San José', 'mgonzalez@empresa.com', 'Gerente', 1500000, 'maria.gonzalez', 'password123');

INSERT INTO PRODUCTOS (CODIGO, NOMBRE, DESCRIPCION, CANTIDAD, PRECIO)
VALUES (101, 'Jeans', 'Color gris', 25, 7500);

------------------------------------------------------------------------

------------------------- INSERTAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE INSERTAR_CLIENTE(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    PRIMER_APELLIDO_IN IN VARCHAR2,
    SEGUNDO_APELLIDO_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2
) AS
BEGIN
    INSERT INTO CLIENTES (CEDULA, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO)
    VALUES (CEDULA_IN, NOMBRE_IN, PRIMER_APELLIDO_IN, SEGUNDO_APELLIDO_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN);
    DBMS_OUTPUT.PUT_LINE('Cliente insertado correctamente: ' || CEDULA_IN);
END;


------------------------- LEER CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE LEER_CLIENTE(
    CEDULA_IN IN VARCHAR2
) AS
    NOMBRE_OUT CLIENTES.NOMBRE%TYPE;
    PRIMER_APELLIDO_OUT CLIENTES.PRIMER_APELLIDO%TYPE;
    SEGUNDO_APELLIDO_OUT CLIENTES.SEGUNDO_APELLIDO%TYPE;
    TIPO_OUT CLIENTES.TIPO%TYPE;
    TELEFONO_OUT CLIENTES.TELEFONO%TYPE;
    DIRECCION_OUT CLIENTES.DIRECCION%TYPE;
    CORREO_OUT CLIENTES.CORREO%TYPE;
BEGIN
    SELECT NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TIPO, TELEFONO, DIRECCION, CORREO
    INTO NOMBRE_OUT, PRIMER_APELLIDO_OUT, SEGUNDO_APELLIDO_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT
    FROM CLIENTES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Cliente encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT || ' ' || PRIMER_APELLIDO_OUT || ' ' || SEGUNDO_APELLIDO_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;

------------------------- ACTUALIZAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE ACTUALIZAR_CLIENTE(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    PRIMER_APELLIDO_IN IN VARCHAR2,
    SEGUNDO_APELLIDO_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2
) AS
BEGIN
    UPDATE CLIENTES
    SET NOMBRE = NOMBRE_IN,
        PRIMER_APELLIDO = PRIMER_APELLIDO_IN,
        SEGUNDO_APELLIDO = SEGUNDO_APELLIDO_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN
    WHERE CEDULA = CEDULA_IN;
    DBMS_OUTPUT.PUT_LINE('Cliente actualizado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;


------------------------------------- ELIMINAR CLIENTE -------------------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_CLIENTE(
    CEDULA_IN IN VARCHAR2
) AS
BEGIN
    DELETE FROM CLIENTES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Cliente eliminado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con cédula: ' || CEDULA_IN);
END;


EXEC INSERTAR_CLIENTE('123456789', 'Juan', 'Perez', 'Lopez', 'Regular', '1234567890', 'Calle Ficticia 123', 'juan.perez@mail.com');

EXEC LEER_CLIENTE('123456789');

EXEC ACTUALIZAR_CLIENTE('123456789', 'Juan', 'Perez', 'Lopez', 'VIP', '0987654321', 'Calle Ficticia 456', 'juan.perez@newmail.com');

EXEC ELIMINAR_CLIENTE('123456789');




------------------------ PROVEEDORES -------------------------------------------


------------------------------------- INSERTAR PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE INSERTAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2,
    PRODUCTOS_IN IN NUMBER
) AS
BEGIN
    INSERT INTO PROVEEDORES (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS)
    VALUES (CEDULA_IN, NOMBRE_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN, PRODUCTOS_IN);

    DBMS_OUTPUT.PUT_LINE('Proveedor insertado correctamente: ' || CEDULA_IN);
END;

------------------------------------- LEER PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE LEER_PROVEEDOR(
    CEDULA_IN IN VARCHAR2
) AS
    NOMBRE_OUT PROVEEDORES.NOMBRE%TYPE;
    TIPO_OUT PROVEEDORES.TIPO%TYPE;
    TELEFONO_OUT PROVEEDORES.TELEFONO%TYPE;
    DIRECCION_OUT PROVEEDORES.DIRECCION%TYPE;
    CORREO_OUT PROVEEDORES.CORREO%TYPE;
    PRODUCTOS_OUT PROVEEDORES.PRODUCTOS%TYPE;
BEGIN
    SELECT NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PRODUCTOS
    INTO NOMBRE_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT, PRODUCTOS_OUT
    FROM PROVEEDORES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Proveedor encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
    DBMS_OUTPUT.PUT_LINE('Productos: ' || PRODUCTOS_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;

------------------------------------- ACTUALIZAR PROVEEDOR -------------------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2,
    PRODUCTOS_IN IN NUMBER
) AS
BEGIN
    UPDATE PROVEEDORES
    SET NOMBRE = NOMBRE_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN,
        PRODUCTOS = PRODUCTOS_IN
    WHERE CEDULA = CEDULA_IN;

    DBMS_OUTPUT.PUT_LINE('Proveedor actualizado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;

------------------------ ELIMINAR PROVEEDOR ------------------------
CREATE OR REPLACE PROCEDURE ELIMINAR_PROVEEDOR(
    CEDULA_IN IN VARCHAR2
) AS
BEGIN
    DELETE FROM PROVEEDORES
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Proveedor eliminado correctamente: ' || CEDULA_IN);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el proveedor con cédula: ' || CEDULA_IN);
END;


EXEC INSERTAR_PROVEEDOR('98745623', 'ProveedorA', 'Mayorista', '9876543210', 'Avenida 9', 'proveedora@mail.com', 50);

EXEC LEER_PROVEEDOR('98745623');

EXEC ACTUALIZAR_PROVEEDOR('98745623', 'ProveedorA', 'Distribuidor', '9888888888', 'Calle Real 456', 'proveedorupdate@mail.com', 60);

EXEC ELIMINAR_PROVEEDOR('98745623');
------------------------------------------------------------------------
------------------------------------------------------------------------

------------------------ CREAR EMPLEADO ------------------------

CREATE OR REPLACE PROCEDURE INSERTAR_EMPLEADO(
    CEDULA_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN CLOB,
    CORREO_IN IN VARCHAR2,
    PUESTO_IN IN VARCHAR2,
    SALARIO_IN IN INT,
    USERNAME_IN IN VARCHAR2,
    PASSWORD_IN IN VARCHAR2
) AS
BEGIN
    INSERT INTO EMPLEADOS (CEDULA, NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD)
    VALUES (CEDULA_IN, NOMBRE_IN, TIPO_IN, TELEFONO_IN, DIRECCION_IN, CORREO_IN, PUESTO_IN, SALARIO_IN, USERNAME_IN, PASSWORD_IN);
    
    DBMS_OUTPUT.PUT_LINE('Empleado insertado correctamente.');
END;

------------------------ LEER EMPLEADO ------------------------
CREATE OR REPLACE PROCEDURE LEER_EMPLEADO(
    CEDULA_IN IN INT
) AS
    NOMBRE_OUT EMPLEADOS.NOMBRE%TYPE;
    TIPO_OUT EMPLEADOS.TIPO%TYPE;
    TELEFONO_OUT EMPLEADOS.TELEFONO%TYPE;
    DIRECCION_OUT EMPLEADOS.DIRECCION%TYPE;
    CORREO_OUT EMPLEADOS.CORREO%TYPE;
    PUESTO_OUT EMPLEADOS.PUESTO%TYPE;
    SALARIO_OUT EMPLEADOS.SALARIO%TYPE;
    USERNAME_OUT EMPLEADOS.USERNAME%TYPE;
    PASSWORD_OUT EMPLEADOS.PASSWORD%TYPE;
BEGIN
    SELECT NOMBRE, TIPO, TELEFONO, DIRECCION, CORREO, PUESTO, SALARIO, USERNAME, PASSWORD
    INTO NOMBRE_OUT, TIPO_OUT, TELEFONO_OUT, DIRECCION_OUT, CORREO_OUT, PUESTO_OUT, SALARIO_OUT, USERNAME_OUT, PASSWORD_OUT
    FROM EMPLEADOS
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Tipo: ' || TIPO_OUT);
    DBMS_OUTPUT.PUT_LINE('Teléfono: ' || TELEFONO_OUT);
    DBMS_OUTPUT.PUT_LINE('Dirección: ' || DIRECCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Correo: ' || CORREO_OUT);
    DBMS_OUTPUT.PUT_LINE('Puesto: ' || PUESTO_OUT);
    DBMS_OUTPUT.PUT_LINE('Salario: ' || SALARIO_OUT);
    DBMS_OUTPUT.PUT_LINE('Username: ' || USERNAME_OUT);
    DBMS_OUTPUT.PUT_LINE('Password: ' || PASSWORD_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;


------------------------ ACTUALIZAR EMPLEADO ------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_EMPLEADO(
    CEDULA_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    TIPO_IN IN VARCHAR2,
    TELEFONO_IN IN VARCHAR2,
    DIRECCION_IN IN CLOB,
    CORREO_IN IN VARCHAR2,
    PUESTO_IN IN VARCHAR2,
    SALARIO_IN IN INT,
    USERNAME_IN IN VARCHAR2,
    PASSWORD_IN IN VARCHAR2
) AS
BEGIN
    UPDATE EMPLEADOS
    SET NOMBRE = NOMBRE_IN,
        TIPO = TIPO_IN,
        TELEFONO = TELEFONO_IN,
        DIRECCION = DIRECCION_IN,
        CORREO = CORREO_IN,
        PUESTO = PUESTO_IN,
        SALARIO = SALARIO_IN,
        USERNAME = USERNAME_IN,
        PASSWORD = PASSWORD_IN
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado actualizado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;



------------------------ ELIMINAR EMPLEADO ------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_EMPLEADO(
    CEDULA_IN IN INT
) AS
BEGIN
    DELETE FROM EMPLEADOS
    WHERE CEDULA = CEDULA_IN;
    
    DBMS_OUTPUT.PUT_LINE('Empleado eliminado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el empleado con cédula: ' || CEDULA_IN);
END;




EXEC INSERTAR_EMPLEADO(12365428, 'Samara Martinez', 'Administrativo', '555-1234', 'Calle Ficticia 123', 's.martinez@email.com', 'Gerente', 3500, 'juanp', 'password123');

EXEC LEER_EMPLEADO(12365428);

EXEC ACTUALIZAR_EMPLEADO(12365428, 'Samara Martinez', 'Manager', '555-4321', 'Calle Real 456', 's.martinez@newmail.com', 'Director', 4000, 'juanp', 'newpassword123');

EXEC ELIMINAR_EMPLEADO(12365428);


------------------------ INSERTAR PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE INSERTAR_PRODUCTO(
    CODIGO_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    DESCRIPCION_IN IN CLOB,
    CANTIDAD_IN IN INT,
    PRECIO_IN IN INT
) AS
BEGIN
    INSERT INTO PRODUCTOS (CODIGO, NOMBRE, DESCRIPCION, CANTIDAD, PRECIO)
    VALUES (CODIGO_IN, NOMBRE_IN, DESCRIPCION_IN, CANTIDAD_IN, PRECIO_IN);
    
    DBMS_OUTPUT.PUT_LINE('Producto insertado correctamente.');
END;


------------------------ LEER PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE LEER_PRODUCTO(
    CODIGO_IN IN INT
) AS
    NOMBRE_OUT PRODUCTOS.NOMBRE%TYPE;
    DESCRIPCION_OUT PRODUCTOS.DESCRIPCION%TYPE;
    CANTIDAD_OUT PRODUCTOS.CANTIDAD%TYPE;
    PRECIO_OUT PRODUCTOS.PRECIO%TYPE;
BEGIN
    SELECT NOMBRE, DESCRIPCION, CANTIDAD, PRECIO
    INTO NOMBRE_OUT, DESCRIPCION_OUT, CANTIDAD_OUT, PRECIO_OUT
    FROM PRODUCTOS
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto encontrado:');
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || NOMBRE_OUT);
    DBMS_OUTPUT.PUT_LINE('Descripción: ' || DESCRIPCION_OUT);
    DBMS_OUTPUT.PUT_LINE('Cantidad: ' || CANTIDAD_OUT);
    DBMS_OUTPUT.PUT_LINE('Precio: ' || PRECIO_OUT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;



------------------------ ACTUALIZAR PRODUCTO ------------------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PRODUCTO(
    CODIGO_IN IN INT,
    NOMBRE_IN IN VARCHAR2,
    DESCRIPCION_IN IN CLOB,
    CANTIDAD_IN IN INT,
    PRECIO_IN IN INT
) AS
BEGIN
    UPDATE PRODUCTOS
    SET NOMBRE = NOMBRE_IN,
        DESCRIPCION = DESCRIPCION_IN,
        CANTIDAD = CANTIDAD_IN,
        PRECIO = PRECIO_IN
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto actualizado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;


------------------------ ELIMINAR PRODUCTO ------------------------

CREATE OR REPLACE PROCEDURE ELIMINAR_PRODUCTO(
    CODIGO_IN IN INT
) AS
BEGIN
    DELETE FROM PRODUCTOS
    WHERE CODIGO = CODIGO_IN;
    
    DBMS_OUTPUT.PUT_LINE('Producto eliminado correctamente.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró el producto con código: ' || CODIGO_IN);
END;


EXEC INSERTAR_PRODUCTO(102, 'Jeans', 'Azul', 50, 1500);

EXEC LEER_PRODUCTO(102);

EXEC ACTUALIZAR_PRODUCTO(102, 'Jeans', 'Negro', 45, 1600);

EXEC ELIMINAR_PRODUCTO(102);



